#! /usr/bin/perl6

use Gamed;
use Gamed::Client;
use Gamed::Player;
use Gamed::Socket;

my $gamed = Gamed;
my $sock = Gamed::Socket.new(
		:localhost('localhost'),
		:localport(3939),
		:listen,
	);

loop {
	my %players;
	if $sock.ready() {
		say "Got connection...";
		my $s = $sock.accept;
		my $c = Gamed::Client.new(:sock($s));
		%players{$s} = Gamed::Player.new(:client($c));
	}
	for %players -> $p {
		try {
			if $p.key.failed {
				say "delete";
				%players.delete($p.key);
			}
			elsif $p.key.ready {
				say "ready";
				$p.game.handle_message($p, $p.read);
			}
		}
	}
	sleep .1;
}

=begin END
my ( $help, $daemonize, $file, $man, $port );
GetOptions(
    'f|config'   => \$file,
    'h|help'   => \$help,
    'p|port=i' => \$port,
    'X'        => \$nodaemonize
) || pod2usage(2);
pod2usage(1) if ($help);

Gamed::main_loop();

__END__

=head1 NAME

gamed - run Gamed server

=head1 SYNOPSIS

gamed [-X] [-p port] [-f /path/to/config]

 Options:
   -f --file       File to use for config
   -h --help       Show this help
   -p --port       Bind to port instead of the default
   -X              Don't daemonize, stay in foreground
