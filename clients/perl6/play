#! /usr/bin/perl6

use JSON::Tiny;
use NativeCall;
use Game;

sub inputAvailable() returns Int is native('input') { ... }

my $conn = IO::Socket::INET.new(:host('localhost'), :port(3939))
		but role { 
			method give($hash){ self.send(to-json($hash)) }
			method take()     { from-json($!PIO.recv()) }
			method read()     { $!PIO.recv() }

			method ready () { 
					fail("Not connected") unless $!PIO; 
					return $!PIO.poll(1, 0, 0); 
			}

		};
		
$conn.give({s=>'login',name=>'Bruce'});
my $r = $conn.read();

my $game;

my %commands = (
	'join' => sub (@a) { $game = client(@a[1]) },
	'Xjoin' => sub (@a) { $conn.give({s=>'join',game=>@a[1]}) },
	'quit' => sub (@a) { exit 0 },
	'exit' => sub (@a) { exit 0 },
);

say "Games available: ";
say games_available;

print ">> ";
loop {
	if (inputAvailable) {
		my $cmd = $*IN.get;
		my @args = $cmd.split(' ');
		if (%commands{@args[0]}) {
			%commands{@args[0]}(@args);
		}
		else {
			$conn.give({ g=>'guess', guess=>$cmd});
		}
		print ">> ";
	}
	sleep(.1);
	say $conn.read if $conn.ready;
}
